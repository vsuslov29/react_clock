{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","timerId","setInterval","Date","toLocaleTimeString","console","log","setState","prevProps","oldName","name","newName","this","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","randomNumber","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,aACNC,QAASC,aAAY,cAAU,IAHnC,uDAME,WAAqB,IAAD,OACZD,EAAUC,aAAY,WAC1B,IAAMF,GAAO,IAAIG,MAAOC,qBAExBC,QAAQC,IAAIN,GAEZ,EAAKO,SAAS,CACZP,OACAC,cAED,OAhBP,gCAmBE,SAAmBO,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUC,KAAKC,MAAMH,KAEvBD,IAAYE,GAEdN,QAAQC,IAAR,qCAA0CG,EAA1C,eAAwDE,MAzB9D,kCA6BE,WACEG,cAAcF,KAAKb,MAAME,WA9B7B,oBAiCE,WACE,OACE,8CAEG,IACAW,KAAKb,MAAMC,YAtCpB,GAA2Be,IAAMC,WCF3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCD,EAAmBN,KAAKb,MAAxBmB,eAsBR,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECF,GACC,cAAC,EAAD,CAAOR,KAAME,KAAKb,MAAMoB,YAG1B,wBAAQE,KAAK,SAASC,QA5BR,WAChB,EAAKf,SAAS,CACZW,gBAAgB,KA0BhB,wBAIA,wBAAQG,KAAK,SAASC,QA1BR,WAChB,EAAKf,SAAS,CACZW,gBAAgB,KAwBhB,wBAIA,wBAAQG,KAAK,SAASC,QAxBF,WACtB,IAAMC,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UAErC,EAAKnB,SAAS,CACZY,UAAWI,KAoBX,oC,GA7CUR,IAAMC,WAqDTC,IC3DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27f69587.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: string;\n  timerId: NodeJS.Timer;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: 'Loading...',\n    timerId: setInterval(() => {}, 0),\n  };\n\n  componentDidMount() {\n    const timerId = setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n      // eslint-disable-next-line\n      console.log(date);\n\n      this.setState({\n        date,\n        timerId,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    const showClock = () => {\n      this.setState({\n        isClockVisible: true,\n      });\n    };\n\n    const hideClock = () => {\n      this.setState({\n        isClockVisible: false,\n      });\n    };\n\n    const setRandomNumber = () => {\n      const randomNumber = Math.floor(Math.random() * 10);\n\n      this.setState({\n        clockName: randomNumber,\n      });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n\n        <button type=\"button\" onClick={showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={setRandomNumber}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}