{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","timerId","setInterval","Date","toLocaleTimeString","console","log","setState","prevProps","oldName","name","newName","this","props","clearInterval","React","Component","App","isClockVisible","clockName","setRandomNumber","randomNumber","Math","floor","random","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,aACNC,QAASC,aAAY,cAAU,IAHnC,uDAME,WAAqB,IAAD,OACZD,EAAUC,aAAY,WAC1B,IAAMF,GAAO,IAAIG,MAAOC,qBAExBC,QAAQC,IAAIN,GAEZ,EAAKO,SAAS,CACZP,OACAC,cAED,OAhBP,gCAmBE,SAAmBO,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUC,KAAKC,MAAMH,KAEvBD,IAAYE,GAEdN,QAAQC,IAAR,qCAA0CG,EAA1C,eAAwDE,MAzB9D,kCA6BE,WACEG,cAAcF,KAAKb,MAAME,WA9B7B,oBAiCE,WACE,OACE,8CAEG,IACAW,KAAKb,MAAMC,YAtCpB,GAA2Be,IAAMC,WCF3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,gBAAkB,WAChB,IAAMC,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UAErC,EAAKjB,SAAS,CACZY,UAAWE,K,EAIfI,UAAY,WACV,EAAKlB,SAAS,CACZW,gBAAgB,K,EAIpBQ,UAAY,WACV,EAAKnB,SAAS,CACZW,gBAAgB,K,4CAIpB,WACE,MAAsCN,KAAKb,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAChBM,EAA0Cb,KAA1Ca,UAAWC,EAA+Bd,KAA/Bc,UAAWN,EAAoBR,KAApBQ,gBAE9B,OACE,sBAAKO,UAAU,MAAf,UACE,6CAECT,GACC,cAAC,EAAD,CAAOR,KAAMS,IAGf,wBAAQS,KAAK,SAASC,QAASJ,EAA/B,wBAIA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,wBAIA,wBAAQE,KAAK,SAASC,QAAST,EAA/B,oC,GA9CUL,IAAMC,WAsDTC,IC5Dfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.303c2337.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: string;\n  timerId: NodeJS.Timer;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: 'Loading...',\n    timerId: setInterval(() => {}, 0),\n  };\n\n  componentDidMount() {\n    const timerId = setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n      // eslint-disable-next-line\n      console.log(date);\n\n      this.setState({\n        date,\n        timerId,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandomNumber = () => {\n    const randomNumber = Math.floor(Math.random() * 10);\n\n    this.setState({\n      clockName: randomNumber,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const { showClock, hideClock, setRandomNumber } = this;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isClockVisible && (\n          <Clock name={clockName} />\n        )}\n\n        <button type=\"button\" onClick={showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={setRandomNumber}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}